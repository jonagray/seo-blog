{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jongraybill/Desktop/programming/seo-blog/frontend/components/auth/ProfileUpdate.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { getProfile, update } from '../../actions/user';\n\nvar ProfileUpdate = function ProfileUpdate() {\n  _s();\n\n  var _useState = useState({\n    username: '',\n    name: '',\n    email: '',\n    about: '',\n    password: '',\n    error: false,\n    success: false,\n    loading: false,\n    photo: '',\n    userData: ''\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var token = getCookie('token');\n  var username = values.username,\n      name = values.name,\n      email = values.email,\n      about = values.about,\n      password = values.password,\n      error = values.error,\n      success = values.success,\n      loading = values.loading,\n      photo = values.photo,\n      userData = values.userData;\n\n  var init = function init() {\n    getProfile(token).then(function (data) {\n      if (data.error) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          username: data.username,\n          name: data.name,\n          email: data.email,\n          about: data.about\n        }));\n      }\n    });\n  };\n\n  useEffect(function () {\n    init();\n  }, []);\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      var _objectSpread2;\n\n      // console.log(e.target.value);\n      var value = name === 'photo' ? e.target.files[0] : e.target.value;\n      var userFormData = new FormData();\n      userFormData.set(name, value);\n      setValues(_objectSpread(_objectSpread({}, values), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, value), _defineProperty(_objectSpread2, \"userData\", userFormData), _defineProperty(_objectSpread2, \"error\", false), _defineProperty(_objectSpread2, \"success\", false), _objectSpread2)));\n    };\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n    update(token, userData).then(function (data) {\n      if (data.error) {\n        setValues(_objectSpread(_objectSpread({}, value), {}, {\n          error: data.error,\n          success: false,\n          loading: false\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          username: data.username,\n          name: data.name,\n          email: data.email,\n          about: data.about,\n          password: '',\n          success: true,\n          loading: false\n        }));\n      }\n    });\n  };\n\n  var profileUpdateForm = function profileUpdateForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      className: \"btn btn-outline-info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"Profile photo\", __jsx(\"input\", {\n      onChange: handleChange('photo'),\n      type: \"file\",\n      accept: \"image/*\",\n      hidden: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }))), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      className: \"text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, \"Username\"), __jsx(\"input\", {\n      onChange: handleChange('username'),\n      type: \"text\",\n      value: username,\n      className: \"form-control\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      className: \"text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"Name\"), __jsx(\"input\", {\n      onChange: handleChange('name'),\n      type: \"text\",\n      value: name,\n      className: \"form-control\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      className: \"text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"Email\"), __jsx(\"input\", {\n      onChange: handleChange('email'),\n      type: \"text\",\n      value: email,\n      className: \"form-control\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      className: \"text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, \"About\"), __jsx(\"textarea\", {\n      onChange: handleChange('about'),\n      type: \"text\",\n      value: about,\n      className: \"form-control\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      className: \"text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, \"Password\"), __jsx(\"input\", {\n      onChange: handleChange('password'),\n      type: \"text\",\n      value: password,\n      className: \"form-control\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, __jsx(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, \"Submit\")));\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, \"image\"), __jsx(\"div\", {\n    className: \"col-md-8 mb-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, profileUpdateForm()))));\n};\n\n_s(ProfileUpdate, \"GY7buB4Np9k92dICnL+t+HQrjtY=\");\n\n_c = ProfileUpdate;\nexport default ProfileUpdate; // import Link from 'next/link';\n// import { useState, useEffect } from 'react';\n// import Router from 'next/router';\n// import { getCookie, isAuth, updateUser } from '../../actions/auth';\n// import { getProfile, update } from '../../actions/user';\n// import { API } from '../../config';\n// const ProfileUpdate = () => {\n//     const [values, setValues] = useState({\n//         username: '',\n//         username_for_photo: '',\n//         name: '',\n//         email: '',\n//         about: '',\n//         password: '',\n//         error: false,\n//         success: false,\n//         loading: false,\n//         photo: '',\n//         userData: process.browser && new FormData()\n//     });\n//     const token = getCookie('token');\n//     const {\n//         username,\n//         username_for_photo,\n//         name,\n//         email,\n//         about,\n//         password,\n//         error,\n//         success,\n//         loading,\n//         photo,\n//         userData\n//     } = values;\n//     const init = () => {\n//         getProfile(token).then(data => {\n//             if (data.error) {\n//                 setValues({ ...values, error: data.error });\n//             } else {\n//                 setValues({\n//                     ...values,\n//                     username: data.username,\n//                     username_for_photo: data.username,\n//                     name: data.name,\n//                     email: data.email,\n//                     about: data.about\n//                 });\n//             }\n//         });\n//     };\n//     useEffect(() => {\n//         init();\n//         setValues({ ...values, userData: new FormData() });\n//     }, []);\n//     const handleChange = name => e => {\n//         // console.log(e.target.value);\n//         const value = name === 'photo' ? e.target.files[0] : e.target.value;\n//         // let userData = new FormData();\n//         userData.set(name, value);\n//         console.log(...userData); // SEE THE FORMDATA IN CONSOLE\n//         setValues({ ...values, [name]: value, userData, error: false, success: false });\n//     };\n//     const handleSubmit = e => {\n//         e.preventDefault();\n//         setValues({ ...values, loading: true });\n//         update(token, userData).then(data => {\n//             if (data.error) {\n//                 console.log('data.error', data.error);\n//                 setValues({ ...values, error: data.error, loading: false });\n//             } else {\n//                 updateUser(data, () => {\n//                     setValues({\n//                         ...values,\n//                         username: data.username,\n//                         name: data.name,\n//                         email: data.email,\n//                         about: data.about,\n//                         password: '',\n//                         success: true,\n//                         loading: false\n//                     });\n//                 });\n//             }\n//         });\n//     };\n//     const profileUpdateForm = () => (\n//         <form onSubmit={handleSubmit}>\n//             <div className=\"form-group\">\n//                 <label className=\"btn btn-outline-info\">\n//                     Profile photo\n//                     <input onChange={handleChange('photo')} type=\"file\" accept=\"image/*\" hidden />\n//                 </label>\n//             </div>\n//             <div className=\"form-group\">\n//                 <label className=\"text-muted\">Username</label>\n//                 <input onChange={handleChange('username')} type=\"text\" value={username} className=\"form-control\" />\n//             </div>\n//             <div className=\"form-group\">\n//                 <label className=\"text-muted\">Name</label>\n//                 <input onChange={handleChange('name')} type=\"text\" value={name} className=\"form-control\" />\n//             </div>\n//             {/*<div className=\"form-group\">\n//                 <label className=\"text-muted\">Email</label>\n//                 <input onChange={handleChange('email')} type=\"text\" value={email} className=\"form-control\" />\n//             </div>*/}\n//             <div className=\"form-group\">\n//                 <label className=\"text-muted\">About</label>\n//                 <textarea onChange={handleChange('about')} type=\"text\" value={about} className=\"form-control\" />\n//             </div>\n//             <div className=\"form-group\">\n//                 <label className=\"text-muted\">Password</label>\n//                 <input onChange={handleChange('password')} type=\"password\" value={password} className=\"form-control\" />\n//             </div>\n//             <div>\n//                 {showSuccess()}\n//                 {showError()}\n//                 {showLoading()}\n//             </div>\n//             <div>\n//                 <button type=\"submit\" className=\"btn btn-primary\" disabled={!username || !name || !email}>\n//                     Update\n//                 </button>\n//             </div>\n//         </form>\n//     );\n//     const showError = () => (\n//         <div className=\"alert alert-danger\" style={‌{display: error ? '' : 'none'}}>\n//             {error}\n//         </div>\n//     );\n//     const showSuccess = () => (\n//         <div className=\"alert alert-success\" style={‌{ display: success ? '' : 'none' }}>\n//             Profile updated\n//         </div>\n//     );\n//     const showLoading = () => (\n//         <div className=\"alert alert-info\" style={‌{ display: loading ? '' : 'none' }}>\n//             Loading...\n//         </div>\n//     );\n//     return (\n//         <React.Fragment>\n//             <div className=\"container\">\n//                 <div className=\"row\">\n//                     <div className=\"col-md-4\">\n//                         <img\n//                             src={`${API}/user/photo/${username_for_photo}`}\n//                             className=\"img img-fluid img-thumbnail mb-3\"\n//                             style={‌{ maxHeight: 'auto', maxWidth: '100%' }}\n//                             alt=\"user profile\"\n//                         />\n//                     </div>\n//                     <div className=\"col-md-8 mb-5\">{profileUpdateForm()}</div>\n//                 </div>\n//             </div>\n//         </React.Fragment>\n//     );\n// };\n// export default ProfileUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileUpdate\");","map":{"version":3,"sources":["/Users/jongraybill/Desktop/programming/seo-blog/frontend/components/auth/ProfileUpdate.js"],"names":["Link","useState","useEffect","Router","getCookie","isAuth","getProfile","update","ProfileUpdate","username","name","email","about","password","error","success","loading","photo","userData","values","setValues","token","init","then","data","handleChange","e","value","target","files","userFormData","FormData","set","handleSubmit","preventDefault","profileUpdateForm"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,oBAAlC;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,oBAAnC;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAAA,kBACIP,QAAQ,CAAC;AACjCQ,IAAAA,QAAQ,EAAE,EADuB;AAEjCC,IAAAA,IAAI,EAAE,EAF2B;AAGjCC,IAAAA,KAAK,EAAE,EAH0B;AAIjCC,IAAAA,KAAK,EAAE,EAJ0B;AAKjCC,IAAAA,QAAQ,EAAE,EALuB;AAMjCC,IAAAA,KAAK,EAAE,KAN0B;AAOjCC,IAAAA,OAAO,EAAE,KAPwB;AAQjCC,IAAAA,OAAO,EAAE,KARwB;AASjCC,IAAAA,KAAK,EAAE,EAT0B;AAUjCC,IAAAA,QAAQ,EAAE;AAVuB,GAAD,CADZ;AAAA,MACjBC,MADiB;AAAA,MACTC,SADS;;AAcxB,MAAMC,KAAK,GAAGjB,SAAS,CAAC,OAAD,CAAvB;AAdwB,MAehBK,QAfgB,GAeqEU,MAfrE,CAehBV,QAfgB;AAAA,MAeNC,IAfM,GAeqES,MAfrE,CAeNT,IAfM;AAAA,MAeAC,KAfA,GAeqEQ,MAfrE,CAeAR,KAfA;AAAA,MAeOC,KAfP,GAeqEO,MAfrE,CAeOP,KAfP;AAAA,MAecC,QAfd,GAeqEM,MAfrE,CAecN,QAfd;AAAA,MAewBC,KAfxB,GAeqEK,MAfrE,CAewBL,KAfxB;AAAA,MAe+BC,OAf/B,GAeqEI,MAfrE,CAe+BJ,OAf/B;AAAA,MAewCC,OAfxC,GAeqEG,MAfrE,CAewCH,OAfxC;AAAA,MAeiDC,KAfjD,GAeqEE,MAfrE,CAeiDF,KAfjD;AAAA,MAewDC,QAfxD,GAeqEC,MAfrE,CAewDD,QAfxD;;AAiBxB,MAAMI,IAAI,GAAG,SAAPA,IAAO,GAAM;AACfhB,IAAAA,UAAU,CAACe,KAAD,CAAV,CAAkBE,IAAlB,CAAuB,UAAAC,IAAI,EAAI;AAC3B,UAAIA,IAAI,CAACV,KAAT,EAAgB;AACZM,QAAAA,SAAS,iCAAMD,MAAN;AAAcL,UAAAA,KAAK,EAAEU,IAAI,CAACV;AAA1B,WAAT;AACH,OAFD,MAEO;AACHM,QAAAA,SAAS,iCACFD,MADE;AAELV,UAAAA,QAAQ,EAAEe,IAAI,CAACf,QAFV;AAGLC,UAAAA,IAAI,EAAEc,IAAI,CAACd,IAHN;AAILC,UAAAA,KAAK,EAAEa,IAAI,CAACb,KAJP;AAKLC,UAAAA,KAAK,EAAEY,IAAI,CAACZ;AALP,WAAT;AAOH;AACJ,KAZD;AAaH,GAdD;;AAgBAV,EAAAA,SAAS,CAAC,YAAM;AACZoB,IAAAA,IAAI;AACP,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMG,YAAY,GAAG,SAAfA,YAAe,CAAAf,IAAI;AAAA,WAAI,UAAAgB,CAAC,EAAI;AAAA;;AAC9B;AACA,UAAMC,KAAK,GAAGjB,IAAI,KAAK,OAAT,GAAmBgB,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAnB,GAAuCH,CAAC,CAACE,MAAF,CAASD,KAA9D;AACA,UAAIG,YAAY,GAAG,IAAIC,QAAJ,EAAnB;AACAD,MAAAA,YAAY,CAACE,GAAb,CAAiBtB,IAAjB,EAAuBiB,KAAvB;AACAP,MAAAA,SAAS,iCAAMD,MAAN,6DAAeT,IAAf,EAAsBiB,KAAtB,+CAAuCG,YAAvC,4CAA4D,KAA5D,8CAA4E,KAA5E,oBAAT;AACH,KANwB;AAAA,GAAzB;;AAQA,MAAMG,YAAY,GAAG,SAAfA,YAAe,CAAAP,CAAC,EAAI;AACtBA,IAAAA,CAAC,CAACQ,cAAF;AACAd,IAAAA,SAAS,iCAAMD,MAAN;AAAcH,MAAAA,OAAO,EAAE;AAAvB,OAAT;AACAT,IAAAA,MAAM,CAACc,KAAD,EAAQH,QAAR,CAAN,CAAwBK,IAAxB,CAA6B,UAAAC,IAAI,EAAI;AACjC,UAAIA,IAAI,CAACV,KAAT,EAAgB;AACZM,QAAAA,SAAS,iCAAMO,KAAN;AAAab,UAAAA,KAAK,EAAEU,IAAI,CAACV,KAAzB;AAAgCC,UAAAA,OAAO,EAAE,KAAzC;AAAgDC,UAAAA,OAAO,EAAE;AAAzD,WAAT;AACH,OAFD,MAEO;AACHI,QAAAA,SAAS,iCACFD,MADE;AAELV,UAAAA,QAAQ,EAAEe,IAAI,CAACf,QAFV;AAGLC,UAAAA,IAAI,EAAEc,IAAI,CAACd,IAHN;AAILC,UAAAA,KAAK,EAAEa,IAAI,CAACb,KAJP;AAKLC,UAAAA,KAAK,EAAEY,IAAI,CAACZ,KALP;AAMLC,UAAAA,QAAQ,EAAE,EANL;AAOLE,UAAAA,OAAO,EAAE,IAPJ;AAQLC,UAAAA,OAAO,EAAE;AARJ,WAAT;AAUH;AACJ,KAfD;AAgBH,GAnBD;;AAqBA,MAAMmB,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,WACtB;AAAM,MAAA,QAAQ,EAAEF,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEI;AAAO,MAAA,QAAQ,EAAER,YAAY,CAAC,OAAD,CAA7B;AAAwC,MAAA,IAAI,EAAC,MAA7C;AAAoD,MAAA,MAAM,EAAC,SAA3D;AAAqE,MAAA,MAAM,MAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ,EAOI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAO,MAAA,QAAQ,EAAEA,YAAY,CAAC,UAAD,CAA7B;AAA2C,MAAA,IAAI,EAAC,MAAhD;AAAuD,MAAA,KAAK,EAAEhB,QAA9D;AAAwE,MAAA,SAAS,EAAC,cAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAPJ,EAWI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAO,MAAA,QAAQ,EAAEgB,YAAY,CAAC,MAAD,CAA7B;AAAuC,MAAA,IAAI,EAAC,MAA5C;AAAmD,MAAA,KAAK,EAAEf,IAA1D;AAAgE,MAAA,SAAS,EAAC,cAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAXJ,EAeI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAO,MAAA,QAAQ,EAAEe,YAAY,CAAC,OAAD,CAA7B;AAAwC,MAAA,IAAI,EAAC,MAA7C;AAAoD,MAAA,KAAK,EAAEd,KAA3D;AAAkE,MAAA,SAAS,EAAC,cAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAfJ,EAmBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAU,MAAA,QAAQ,EAAEc,YAAY,CAAC,OAAD,CAAhC;AAA2C,MAAA,IAAI,EAAC,MAAhD;AAAuD,MAAA,KAAK,EAAEb,KAA9D;AAAqE,MAAA,SAAS,EAAC,cAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAnBJ,EAuBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAO,MAAA,QAAQ,EAAEa,YAAY,CAAC,UAAD,CAA7B;AAA2C,MAAA,IAAI,EAAC,MAAhD;AAAuD,MAAA,KAAK,EAAEZ,QAA9D;AAAwE,MAAA,SAAS,EAAC,cAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAvBJ,EA2BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CA3BJ,CADsB;AAAA,GAA1B;;AAoCA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCsB,iBAAiB,EAAjD,CAFJ,CADJ,CADJ,CADJ;AAUH,CAhHD;;GAAM3B,a;;KAAAA,a;AAkHN,eAAeA,aAAfsourcesContent":["import Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { getProfile, update } from '../../actions/user';\n\nconst ProfileUpdate = () => {\n    const [values, setValues] = useState({\n        username: '',\n        name: '',\n        email: '',\n        about: '',\n        password: '',\n        error: false,\n        success: false,\n        loading: false,\n        photo: '',\n        userData: ''\n    });\n\n    const token = getCookie('token');\n    const { username, name, email, about, password, error, success, loading, photo, userData } = values;\n\n    const init = () => {\n        getProfile(token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    username: data.username,\n                    name: data.name,\n                    email: data.email,\n                    about: data.about\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    const handleChange = name => e => {\n        // console.log(e.target.value);\n        const value = name === 'photo' ? e.target.files[0] : e.target.value;\n        let userFormData = new FormData();\n        userFormData.set(name, value);\n        setValues({ ...values, [name]: value, userData: userFormData, error: false, success: false });\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        setValues({ ...values, loading: true });\n        update(token, userData).then(data => {\n            if (data.error) {\n                setValues({ ...value, error: data.error, success: false, loading: false });\n            } else {\n                setValues({\n                    ...values,\n                    username: data.username,\n                    name: data.name,\n                    email: data.email,\n                    about: data.about,\n                    password: '',\n                    success: true,\n                    loading: false\n                });\n            }\n        });\n    };\n\n    const profileUpdateForm = () => (\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <label className=\"btn btn-outline-info\">\n                    Profile photo\n                    <input onChange={handleChange('photo')} type=\"file\" accept=\"image/*\" hidden />\n                </label>\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Username</label>\n                <input onChange={handleChange('username')} type=\"text\" value={username} className=\"form-control\" />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" value={name} className=\"form-control\" />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input onChange={handleChange('email')} type=\"text\" value={email} className=\"form-control\" />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">About</label>\n                <textarea onChange={handleChange('about')} type=\"text\" value={about} className=\"form-control\" />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input onChange={handleChange('password')} type=\"text\" value={password} className=\"form-control\" />\n            </div>\n            <div>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                </button>\n            </div>\n        </form>\n    );\n\n    return (\n        <React.Fragment>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-4\">image</div>\n                    <div className=\"col-md-8 mb-5\">{profileUpdateForm()}</div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default ProfileUpdate;\n\n\n\n\n\n// import Link from 'next/link';\n// import { useState, useEffect } from 'react';\n// import Router from 'next/router';\n// import { getCookie, isAuth, updateUser } from '../../actions/auth';\n// import { getProfile, update } from '../../actions/user';\n// import { API } from '../../config';\n \n// const ProfileUpdate = () => {\n//     const [values, setValues] = useState({\n//         username: '',\n//         username_for_photo: '',\n//         name: '',\n//         email: '',\n//         about: '',\n//         password: '',\n//         error: false,\n//         success: false,\n//         loading: false,\n//         photo: '',\n//         userData: process.browser && new FormData()\n//     });\n \n//     const token = getCookie('token');\n//     const {\n//         username,\n//         username_for_photo,\n//         name,\n//         email,\n//         about,\n//         password,\n//         error,\n//         success,\n//         loading,\n//         photo,\n//         userData\n//     } = values;\n \n//     const init = () => {\n//         getProfile(token).then(data => {\n//             if (data.error) {\n//                 setValues({ ...values, error: data.error });\n//             } else {\n//                 setValues({\n//                     ...values,\n//                     username: data.username,\n//                     username_for_photo: data.username,\n//                     name: data.name,\n//                     email: data.email,\n//                     about: data.about\n//                 });\n//             }\n//         });\n//     };\n \n//     useEffect(() => {\n//         init();\n//         setValues({ ...values, userData: new FormData() });\n//     }, []);\n \n//     const handleChange = name => e => {\n//         // console.log(e.target.value);\n//         const value = name === 'photo' ? e.target.files[0] : e.target.value;\n//         // let userData = new FormData();\n//         userData.set(name, value);\n//         console.log(...userData); // SEE THE FORMDATA IN CONSOLE\n//         setValues({ ...values, [name]: value, userData, error: false, success: false });\n//     };\n \n//     const handleSubmit = e => {\n//         e.preventDefault();\n \n//         setValues({ ...values, loading: true });\n//         update(token, userData).then(data => {\n//             if (data.error) {\n//                 console.log('data.error', data.error);\n//                 setValues({ ...values, error: data.error, loading: false });\n//             } else {\n//                 updateUser(data, () => {\n//                     setValues({\n//                         ...values,\n//                         username: data.username,\n//                         name: data.name,\n//                         email: data.email,\n//                         about: data.about,\n//                         password: '',\n//                         success: true,\n//                         loading: false\n//                     });\n//                 });\n//             }\n//         });\n//     };\n \n//     const profileUpdateForm = () => (\n//         <form onSubmit={handleSubmit}>\n//             <div className=\"form-group\">\n//                 <label className=\"btn btn-outline-info\">\n//                     Profile photo\n//                     <input onChange={handleChange('photo')} type=\"file\" accept=\"image/*\" hidden />\n//                 </label>\n//             </div>\n//             <div className=\"form-group\">\n//                 <label className=\"text-muted\">Username</label>\n//                 <input onChange={handleChange('username')} type=\"text\" value={username} className=\"form-control\" />\n//             </div>\n//             <div className=\"form-group\">\n//                 <label className=\"text-muted\">Name</label>\n//                 <input onChange={handleChange('name')} type=\"text\" value={name} className=\"form-control\" />\n//             </div>\n//             {/*<div className=\"form-group\">\n//                 <label className=\"text-muted\">Email</label>\n//                 <input onChange={handleChange('email')} type=\"text\" value={email} className=\"form-control\" />\n//             </div>*/}\n//             <div className=\"form-group\">\n//                 <label className=\"text-muted\">About</label>\n//                 <textarea onChange={handleChange('about')} type=\"text\" value={about} className=\"form-control\" />\n//             </div>\n//             <div className=\"form-group\">\n//                 <label className=\"text-muted\">Password</label>\n//                 <input onChange={handleChange('password')} type=\"password\" value={password} className=\"form-control\" />\n//             </div>\n//             <div>\n//                 {showSuccess()}\n//                 {showError()}\n//                 {showLoading()}\n//             </div>\n//             <div>\n//                 <button type=\"submit\" className=\"btn btn-primary\" disabled={!username || !name || !email}>\n//                     Update\n//                 </button>\n//             </div>\n//         </form>\n//     );\n \n//     const showError = () => (\n//         <div className=\"alert alert-danger\" style={‌{display: error ? '' : 'none'}}>\n//             {error}\n//         </div>\n//     );\n \n//     const showSuccess = () => (\n//         <div className=\"alert alert-success\" style={‌{ display: success ? '' : 'none' }}>\n//             Profile updated\n//         </div>\n//     );\n \n//     const showLoading = () => (\n//         <div className=\"alert alert-info\" style={‌{ display: loading ? '' : 'none' }}>\n//             Loading...\n//         </div>\n//     );\n \n//     return (\n//         <React.Fragment>\n//             <div className=\"container\">\n//                 <div className=\"row\">\n//                     <div className=\"col-md-4\">\n//                         <img\n//                             src={`${API}/user/photo/${username_for_photo}`}\n//                             className=\"img img-fluid img-thumbnail mb-3\"\n//                             style={‌{ maxHeight: 'auto', maxWidth: '100%' }}\n//                             alt=\"user profile\"\n//                         />\n//                     </div>\n//                     <div className=\"col-md-8 mb-5\">{profileUpdateForm()}</div>\n//                 </div>\n//             </div>\n//         </React.Fragment>\n//     );\n// };\n \n// export default ProfileUpdate;"]},"metadata":{},"sourceType":"module"}