{"ast":null,"code":"var _jsxFileName = \"/Users/jongraybill/Desktop/programming/seo-blog/frontend/components/crud/Category.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { isAuth, getCookie } from '../../actions/auth';\nimport { create } from '../../actions/category';\n\nconst Category = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    name: '',\n    error: false,\n    success: false,\n    categories: [],\n    removed: false\n  });\n  const {\n    name,\n    error,\n    success,\n    categories,\n    removed\n  } = values;\n  const token = getCookie('token');\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    console.log('create category', name);\n  };\n\n  const handleChange = e => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      name: e.target.value,\n      error: false,\n      success: false,\n      removed: ''\n    }));\n  };\n\n  const newCategoryForm = () => {\n    __jsx(\"form\", {\n      onSubmit: clickSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, __jsx(\"label\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"Name\"), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      onChange: handleChange,\n      value: name,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }), __jsx(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, \"Create\")));\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, newCategoryForm());\n};\n\nexport default Category; // /**\n//  * FULL CODE CATEGORY\n//  * components/crud/Category.js\n//  */\n// import { useState, useEffect } from 'react';\n// import Link from 'next/link';\n// import Router from 'next/router';\n// import { getCookie } from '../../actions/auth';\n// import { create, getCategories, removeCategory } from '../../actions/category';\n// const Category = () => {\n//     const [values, setValues] = useState({\n//         name: '',\n//         error: false,\n//         success: false,\n//         categories: [],\n//         removed: false,\n//         reload: false\n//     });\n//     const { name, error, success, categories, removed, reload } = values;\n//     const token = getCookie('token');\n//     useEffect(() => {\n//         loadCategories();\n//     }, [reload]);\n//     const loadCategories = () => {\n//         getCategories().then(data => {\n//             if (data.error) {\n//                 console.log(data.error);\n//             } else {\n//                 setValues({ ...values, categories: data });\n//             }\n//         });\n//     };\n//     const showCategories = () => {\n//         return categories.map((c, i) => {\n//             return (\n//                 <button\n//                     onDoubleClick={() => deleteConfirm(c.slug)}\n//                     title=\"Double click to delete\"\n//                     key={i}\n//                     className=\"btn btn-outline-primary mr-1 ml-1 mt-3\"\n//                 >\n//                     {c.name}\n//                 </button>\n//             );\n//         });\n//     };\n//     const deleteConfirm = slug => {\n//         let answer = window.confirm('Are you sure you want to delete this category?');\n//         if (answer) {\n//             deleteCategory(slug);\n//         }\n//     };\n//     const deleteCategory = slug => {\n//         // console.log('delete', slug);\n//         removeCategory(slug, token).then(data => {\n//             if (data.error) {\n//                 console.log(data.error);\n//             } else {\n//                 setValues({ ...values, error: false, success: false, name: '', removed: !removed, reload: !reload });\n//             }\n//         });\n//     };\n//     const clickSubmit = e => {\n//         e.preventDefault();\n//         // console.log('create category', name);\n//         create({ name }, token).then(data => {\n//             if (data.error) {\n//                 setValues({ ...values, error: data.error, success: false });\n//             } else {\n//                 setValues({ ...values, error: false, success: false, name: '', removed: !removed, reload: !reload });\n//             }\n//         });\n//     };\n//     const handleChange = e => {\n//         setValues({ ...values, name: e.target.value, error: false, success: false, removed: '' });\n//     };\n//     const showSuccess = () => {\n//         if (success) {\n//             return <p className=\"text-success\">Category is created</p>;\n//         }\n//     };\n//     const showError = () => {\n//         if (error) {\n//             return <p className=\"text-danger\">Category already exist</p>;\n//         }\n//     };\n//     const showRemoved = () => {\n//         if (removed) {\n//             return <p className=\"text-danger\">Category is removed</p>;\n//         }\n//     };\n//     const mouseMoveHandler = e => {\n//         setValues({ ...values, error: false, success: false, removed: '' });\n//     };\n//     const newCategoryFom = () => (\n//         <form onSubmit={clickSubmit}>\n//             <div className=\"form-group\">\n//                 <label className=\"text-muted\">Name</label>\n//                 <input type=\"text\" className=\"form-control\" onChange={handleChange} value={name} required />\n//             </div>\n//             <div>\n//                 <button type=\"submit\" className=\"btn btn-primary\">\n//                     Create\n//                 </button>\n//             </div>\n//         </form>\n//     );\n//     return (\n//         <React.Fragment>\n//             {showSuccess()}\n//             {showError()}\n//             {showRemoved()}\n//             <div onMouseMove={mouseMoveHandler}>\n//                 {newCategoryFom()}\n//                 {showCategories()}\n//             </div>\n//         </React.Fragment>\n//     );\n// };\n// export default Category;","map":{"version":3,"sources":["/Users/jongraybill/Desktop/programming/seo-blog/frontend/components/crud/Category.js"],"names":["useState","useEffect","Link","Router","isAuth","getCookie","create","Category","values","setValues","name","error","success","categories","removed","token","clickSubmit","e","preventDefault","console","log","handleChange","target","value","newCategoryForm"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,oBAAlC;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC;AACnCU,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAE,KAF4B;AAGnCC,IAAAA,OAAO,EAAE,KAH0B;AAInCC,IAAAA,UAAU,EAAE,EAJuB;AAKnCC,IAAAA,OAAO,EAAE;AAL0B,GAAD,CAApC;AAQA,QAAM;AAAEJ,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA,UAAxB;AAAoCC,IAAAA;AAApC,MAAgDN,MAAtD;AACA,QAAMO,KAAK,GAAGV,SAAS,CAAC,OAAD,CAAvB;;AAEA,QAAMW,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BV,IAA/B;AACD,GAHD;;AAKA,QAAMW,YAAY,GAAIJ,CAAD,IAAO;AAC1BR,IAAAA,SAAS,iCAAMD,MAAN;AAAcE,MAAAA,IAAI,EAAEO,CAAC,CAACK,MAAF,CAASC,KAA7B;AAAoCZ,MAAAA,KAAK,EAAE,KAA3C;AAAkDC,MAAAA,OAAO,EAAE,KAA3D;AAAkEE,MAAAA,OAAO,EAAE;AAA3E,OAAT;AACD,GAFD;;AAIA,QAAMU,eAAe,GAAG,MAAM;AAC5B;AAAM,MAAA,QAAQ,EAAER,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,QAAQ,EAAEK,YAAtD;AAAoE,MAAA,KAAK,EAAEX,IAA3E;AAAiF,MAAA,QAAQ,MAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF;AAOD,GARD;;AAUA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGc,eAAe,EADlB,CADF;AAKD,CApCD;;AAsCA,eAAejB,QAAfsourcesContent":["import { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { isAuth, getCookie } from '../../actions/auth';\nimport { create } from '../../actions/category';\n\nconst Category = () => {\n  const [values, setValues] = useState({\n    name: '',\n    error: false,\n    success: false,\n    categories: [],\n    removed: false\n  });\n\n  const { name, error, success, categories, removed } = values;\n  const token = getCookie('token');\n\n  const clickSubmit = (e) => {\n    e.preventDefault();\n    console.log('create category', name);\n  };\n\n  const handleChange = (e) => {\n    setValues({ ...values, name: e.target.value, error: false, success: false, removed: '' });\n  };\n\n  const newCategoryForm = () => {\n    <form onSubmit={clickSubmit}>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Name</label>\n        <input type=\"text\" className=\"form-control\" onChange={handleChange} value={name} required />\n        <button type=\"submit\" className=\"btn btn-primary\">Create</button>\n      </div>\n    </form>\n  };\n\n  return (\n    <React.Fragment>\n      {newCategoryForm()}\n    </React.Fragment>\n  );\n};\n\nexport default Category;\n\n\n\n// /**\n//  * FULL CODE CATEGORY\n//  * components/crud/Category.js\n//  */\n\n// import { useState, useEffect } from 'react';\n// import Link from 'next/link';\n// import Router from 'next/router';\n// import { getCookie } from '../../actions/auth';\n// import { create, getCategories, removeCategory } from '../../actions/category';\n\n// const Category = () => {\n//     const [values, setValues] = useState({\n//         name: '',\n//         error: false,\n//         success: false,\n//         categories: [],\n//         removed: false,\n//         reload: false\n//     });\n\n//     const { name, error, success, categories, removed, reload } = values;\n//     const token = getCookie('token');\n\n//     useEffect(() => {\n//         loadCategories();\n//     }, [reload]);\n\n//     const loadCategories = () => {\n//         getCategories().then(data => {\n//             if (data.error) {\n//                 console.log(data.error);\n//             } else {\n//                 setValues({ ...values, categories: data });\n//             }\n//         });\n//     };\n\n//     const showCategories = () => {\n//         return categories.map((c, i) => {\n//             return (\n//                 <button\n//                     onDoubleClick={() => deleteConfirm(c.slug)}\n//                     title=\"Double click to delete\"\n//                     key={i}\n//                     className=\"btn btn-outline-primary mr-1 ml-1 mt-3\"\n//                 >\n//                     {c.name}\n//                 </button>\n//             );\n//         });\n//     };\n\n//     const deleteConfirm = slug => {\n//         let answer = window.confirm('Are you sure you want to delete this category?');\n//         if (answer) {\n//             deleteCategory(slug);\n//         }\n//     };\n\n//     const deleteCategory = slug => {\n//         // console.log('delete', slug);\n//         removeCategory(slug, token).then(data => {\n//             if (data.error) {\n//                 console.log(data.error);\n//             } else {\n//                 setValues({ ...values, error: false, success: false, name: '', removed: !removed, reload: !reload });\n//             }\n//         });\n//     };\n\n//     const clickSubmit = e => {\n//         e.preventDefault();\n//         // console.log('create category', name);\n//         create({ name }, token).then(data => {\n//             if (data.error) {\n//                 setValues({ ...values, error: data.error, success: false });\n//             } else {\n//                 setValues({ ...values, error: false, success: false, name: '', removed: !removed, reload: !reload });\n//             }\n//         });\n//     };\n\n//     const handleChange = e => {\n//         setValues({ ...values, name: e.target.value, error: false, success: false, removed: '' });\n//     };\n\n//     const showSuccess = () => {\n//         if (success) {\n//             return <p className=\"text-success\">Category is created</p>;\n//         }\n//     };\n\n//     const showError = () => {\n//         if (error) {\n//             return <p className=\"text-danger\">Category already exist</p>;\n//         }\n//     };\n\n//     const showRemoved = () => {\n//         if (removed) {\n//             return <p className=\"text-danger\">Category is removed</p>;\n//         }\n//     };\n\n//     const mouseMoveHandler = e => {\n//         setValues({ ...values, error: false, success: false, removed: '' });\n//     };\n\n//     const newCategoryFom = () => (\n//         <form onSubmit={clickSubmit}>\n//             <div className=\"form-group\">\n//                 <label className=\"text-muted\">Name</label>\n//                 <input type=\"text\" className=\"form-control\" onChange={handleChange} value={name} required />\n//             </div>\n//             <div>\n//                 <button type=\"submit\" className=\"btn btn-primary\">\n//                     Create\n//                 </button>\n//             </div>\n//         </form>\n//     );\n\n//     return (\n//         <React.Fragment>\n//             {showSuccess()}\n//             {showError()}\n//             {showRemoved()}\n//             <div onMouseMove={mouseMoveHandler}>\n//                 {newCategoryFom()}\n//                 {showCategories()}\n//             </div>\n//         </React.Fragment>\n//     );\n// };\n\n// export default Category;"]},"metadata":{},"sourceType":"module"}