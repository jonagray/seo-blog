{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport var createBlog = function createBlog(blog, token) {\n  return fetch(\"\".concat(API, \"/blog\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: blog\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var listBlogsWithCategoriesAndTags = function listBlogsWithCategoriesAndTags(skip, limit) {\n  var data = {\n    limit: limit,\n    skip: skip\n  };\n  return fetch(\"\".concat(API, \"/blogs-categories-tags\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var singleBlog = function singleBlog(slug) {\n  return fetch(\"\".concat(API, \"/blog/\").concat(slug), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var listRelated = function listRelated(blog) {\n  return fetch(\"\".concat(API, \"/blogs/related\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(blog)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var list = function list() {\n  return fetch(\"\".concat(API, \"/blogs/\").concat(slug), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var removeBlog = function removeBlog(blog, token) {\n  return fetch(\"\".concat(API, \"/blog/\").concat(slug), {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var updateBlog = function updateBlog(blog, token) {\n  return fetch(\"\".concat(API, \"/blog/\").concat(slug), {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: blog\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["/Users/jongraybill/Desktop/programming/seo-blog/frontend/actions/blog.js"],"names":["fetch","API","createBlog","blog","token","method","headers","Accept","Authorization","body","then","response","json","err","console","log","listBlogsWithCategoriesAndTags","skip","limit","data","JSON","stringify","singleBlog","slug","listRelated","list","removeBlog","updateBlog"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\n\nexport const createBlog = (blog, token) => {\n    return fetch(`${API}/blog`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: blog\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const listBlogsWithCategoriesAndTags = (skip, limit) => {\n    const data = {\n        limit, skip\n    };\n    return fetch(`${API}/blogs-categories-tags`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const singleBlog = slug => {\n    return fetch(`${API}/blog/${slug}`, {\n        method: 'GET'\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const listRelated = (blog) => {\n    return fetch(`${API}/blogs/related`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(blog)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const list = () => {\n    return fetch(`${API}/blogs/${slug}`, {\n        method: 'GET'\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const removeBlog = (blog, token) => {\n    return fetch(`${API}/blog/${slug}`, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateBlog = (blog, token) => {\n    return fetch(`${API}/blog/${slug}`, {\n        method: 'PUT',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: blog\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};"]},"metadata":{},"sourceType":"module"}