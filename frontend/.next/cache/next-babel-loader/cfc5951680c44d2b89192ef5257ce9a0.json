{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport { handleResponse } from './auth';\nexport const create = (tag, token) => {\n  return fetch(`${API}/tag`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(tag)\n  }).then(response => {\n    handleResponse(response);\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getTags = () => {\n  return fetch(`${API}/tags`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const singleTag = slug => {\n  return fetch(`${API}/tag/${slug}`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const removeTag = (slug, token) => {\n  return fetch(`${API}/tag/${slug}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    handleResponse(response);\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/jongraybill/Desktop/programming/seo-blog/frontend/actions/tag.js"],"names":["fetch","API","handleResponse","create","tag","token","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","getTags","singleTag","slug","removeTag"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,cAAT,QAA+B,QAA/B;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAClC,SAAOL,KAAK,CAAE,GAAEC,GAAI,MAAR,EAAe;AACvBK,IAAAA,MAAM,EAAE,MADe;AAEvBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAH1B,KAFc;AAOvBK,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,GAAf;AAPiB,GAAf,CAAL,CASFS,IATE,CASGC,QAAQ,IAAI;AACdZ,IAAAA,cAAc,CAACY,QAAD,CAAd;AACA,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAZE,EAaFC,KAbE,CAaIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAbX,CAAP;AAcH,CAfM;AAiBP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAOpB,KAAK,CAAE,GAAEC,GAAI,OAAR,EAAgB;AACxBK,IAAAA,MAAM,EAAE;AADgB,GAAhB,CAAL,CAGFO,IAHE,CAGGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GALE,EAMFC,KANE,CAMIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANX,CAAP;AAOD,CARM;AAUP,OAAO,MAAMI,SAAS,GAAIC,IAAD,IAAU;AACjC,SAAOtB,KAAK,CAAE,GAAEC,GAAI,QAAOqB,IAAK,EAApB,EAAuB;AAC/BhB,IAAAA,MAAM,EAAE;AADuB,GAAvB,CAAL,CAGFO,IAHE,CAGGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GALE,EAMFC,KANE,CAMIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANX,CAAP;AAOD,CARM;AAUP,OAAO,MAAMM,SAAS,GAAG,CAACD,IAAD,EAAOjB,KAAP,KAAiB;AACxC,SAAOL,KAAK,CAAE,GAAEC,GAAI,QAAOqB,IAAK,EAApB,EAAuB;AAC/BhB,IAAAA,MAAM,EAAE,QADuB;AAE/BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAH1B;AAFsB,GAAvB,CAAL,CAQFQ,IARE,CAQGC,QAAQ,IAAI;AAChBZ,IAAAA,cAAc,CAACY,QAAD,CAAd;AACE,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAXE,EAYFC,KAZE,CAYIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAZX,CAAP;AAaD,CAdM","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport { handleResponse } from './auth';\n\nexport const create = (tag, token) => {\n    return fetch(`${API}/tag`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(tag)\n    })\n        .then(response => {\n            handleResponse(response);\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getTags = () => {\n  return fetch(`${API}/tags`, {\n      method: 'GET',\n  })\n      .then(response => {\n          return response.json();\n      })\n      .catch(err => console.log(err));\n};\n\nexport const singleTag = (slug) => {\n  return fetch(`${API}/tag/${slug}`, {\n      method: 'GET',\n  })\n      .then(response => {\n          return response.json();\n      })\n      .catch(err => console.log(err));\n};\n\nexport const removeTag = (slug, token) => {\n  return fetch(`${API}/tag/${slug}`, {\n      method: 'DELETE',\n      headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n      }\n  })\n      .then(response => {\n        handleResponse(response);\n          return response.json();\n      })\n      .catch(err => console.log(err));\n};"]},"metadata":{},"sourceType":"module"}