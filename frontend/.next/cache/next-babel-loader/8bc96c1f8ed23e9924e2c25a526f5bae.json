{"ast":null,"code":"var _jsxFileName = \"/Users/jongraybill/Desktop/programming/seo-blog/frontend/components/auth/ProfileUpdate.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { getProfile, update } from '../../actions/user';\n\nconst ProfileUpdate = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    username: '',\n    name: '',\n    email: '',\n    about: '',\n    password: '',\n    error: false,\n    success: false,\n    loading: false,\n    photo: '',\n    userData: ''\n  });\n  const token = getCookie('token');\n  const {\n    username,\n    name,\n    email,\n    about,\n    password,\n    error,\n    success,\n    loading,\n    photo,\n    userData\n  } = values;\n\n  const init = () => {\n    getProfile(token).then(data => {\n      if (data.error) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          username: data.username,\n          name: data.name,\n          email: data.email,\n          about: data.about\n        }));\n      }\n    });\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  const handleChange = name => e => {\n    // console.log(e.target.value);\n    const value = name === 'photo' ? e.target.files[0] : e.target.value;\n    let userFormData = new FormData();\n    userFormData.set(name, value);\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: value,\n      userData: userFormData,\n      error: false,\n      success: false\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      loading: true\n    }));\n    update(token, userData).then(data => {\n      if (data.error) {\n        setValues(_objectSpread(_objectSpread({}, value), {}, {\n          error: data.error,\n          success: false,\n          loading: false\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          username: data.username,\n          name: data.name,\n          email: data.email,\n          about: data.about,\n          password: '',\n          success: true,\n          loading: false\n        }));\n      }\n    });\n  };\n\n  const profileUpdateForm = () => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"btn btn-outline-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Profile photo\", __jsx(\"input\", {\n    onChange: handleChange('photo'),\n    type: \"file\",\n    accept: \"image/*\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"Username\"), __jsx(\"input\", {\n    onChange: handleChange('username'),\n    type: \"text\",\n    value: username,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"Name\"), __jsx(\"input\", {\n    onChange: handleChange('name'),\n    type: \"text\",\n    value: name,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    onChange: handleChange('email'),\n    type: \"text\",\n    value: email,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"About\"), __jsx(\"textarea\", {\n    onChange: handleChange('about'),\n    type: \"text\",\n    value: about,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    onChange: handleChange('password'),\n    type: \"text\",\n    value: password,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, \"image\"), __jsx(\"div\", {\n    className: \"col-md-8 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, profileUpdateForm()))));\n};\n\nexport default ProfileUpdate; // import Link from 'next/link';\n// import { useState, useEffect } from 'react';\n// import Router from 'next/router';\n// import { getCookie, isAuth, updateUser } from '../../actions/auth';\n// import { getProfile, update } from '../../actions/user';\n// import { API } from '../../config';\n// const ProfileUpdate = () => {\n//     const [values, setValues] = useState({\n//         username: '',\n//         username_for_photo: '',\n//         name: '',\n//         email: '',\n//         about: '',\n//         password: '',\n//         error: false,\n//         success: false,\n//         loading: false,\n//         photo: '',\n//         userData: process.browser && new FormData()\n//     });\n//     const token = getCookie('token');\n//     const {\n//         username,\n//         username_for_photo,\n//         name,\n//         email,\n//         about,\n//         password,\n//         error,\n//         success,\n//         loading,\n//         photo,\n//         userData\n//     } = values;\n//     const init = () => {\n//         getProfile(token).then(data => {\n//             if (data.error) {\n//                 setValues({ ...values, error: data.error });\n//             } else {\n//                 setValues({\n//                     ...values,\n//                     username: data.username,\n//                     username_for_photo: data.username,\n//                     name: data.name,\n//                     email: data.email,\n//                     about: data.about\n//                 });\n//             }\n//         });\n//     };\n//     useEffect(() => {\n//         init();\n//         setValues({ ...values, userData: new FormData() });\n//     }, []);\n//     const handleChange = name => e => {\n//         // console.log(e.target.value);\n//         const value = name === 'photo' ? e.target.files[0] : e.target.value;\n//         // let userData = new FormData();\n//         userData.set(name, value);\n//         console.log(...userData); // SEE THE FORMDATA IN CONSOLE\n//         setValues({ ...values, [name]: value, userData, error: false, success: false });\n//     };\n//     const handleSubmit = e => {\n//         e.preventDefault();\n//         setValues({ ...values, loading: true });\n//         update(token, userData).then(data => {\n//             if (data.error) {\n//                 console.log('data.error', data.error);\n//                 setValues({ ...values, error: data.error, loading: false });\n//             } else {\n//                 updateUser(data, () => {\n//                     setValues({\n//                         ...values,\n//                         username: data.username,\n//                         name: data.name,\n//                         email: data.email,\n//                         about: data.about,\n//                         password: '',\n//                         success: true,\n//                         loading: false\n//                     });\n//                 });\n//             }\n//         });\n//     };\n//     const profileUpdateForm = () => (\n//         <form onSubmit={handleSubmit}>\n//             <div className=\"form-group\">\n//                 <label className=\"btn btn-outline-info\">\n//                     Profile photo\n//                     <input onChange={handleChange('photo')} type=\"file\" accept=\"image/*\" hidden />\n//                 </label>\n//             </div>\n//             <div className=\"form-group\">\n//                 <label className=\"text-muted\">Username</label>\n//                 <input onChange={handleChange('username')} type=\"text\" value={username} className=\"form-control\" />\n//             </div>\n//             <div className=\"form-group\">\n//                 <label className=\"text-muted\">Name</label>\n//                 <input onChange={handleChange('name')} type=\"text\" value={name} className=\"form-control\" />\n//             </div>\n//             {/*<div className=\"form-group\">\n//                 <label className=\"text-muted\">Email</label>\n//                 <input onChange={handleChange('email')} type=\"text\" value={email} className=\"form-control\" />\n//             </div>*/}\n//             <div className=\"form-group\">\n//                 <label className=\"text-muted\">About</label>\n//                 <textarea onChange={handleChange('about')} type=\"text\" value={about} className=\"form-control\" />\n//             </div>\n//             <div className=\"form-group\">\n//                 <label className=\"text-muted\">Password</label>\n//                 <input onChange={handleChange('password')} type=\"password\" value={password} className=\"form-control\" />\n//             </div>\n//             <div>\n//                 {showSuccess()}\n//                 {showError()}\n//                 {showLoading()}\n//             </div>\n//             <div>\n//                 <button type=\"submit\" className=\"btn btn-primary\" disabled={!username || !name || !email}>\n//                     Update\n//                 </button>\n//             </div>\n//         </form>\n//     );\n//     const showError = () => (\n//         <div className=\"alert alert-danger\" style={‌{display: error ? '' : 'none'}}>\n//             {error}\n//         </div>\n//     );\n//     const showSuccess = () => (\n//         <div className=\"alert alert-success\" style={‌{ display: success ? '' : 'none' }}>\n//             Profile updated\n//         </div>\n//     );\n//     const showLoading = () => (\n//         <div className=\"alert alert-info\" style={‌{ display: loading ? '' : 'none' }}>\n//             Loading...\n//         </div>\n//     );\n//     return (\n//         <React.Fragment>\n//             <div className=\"container\">\n//                 <div className=\"row\">\n//                     <div className=\"col-md-4\">\n//                         <img\n//                             src={`${API}/user/photo/${username_for_photo}`}\n//                             className=\"img img-fluid img-thumbnail mb-3\"\n//                             style={‌{ maxHeight: 'auto', maxWidth: '100%' }}\n//                             alt=\"user profile\"\n//                         />\n//                     </div>\n//                     <div className=\"col-md-8 mb-5\">{profileUpdateForm()}</div>\n//                 </div>\n//             </div>\n//         </React.Fragment>\n//     );\n// };\n// export default ProfileUpdate;","map":{"version":3,"sources":["/Users/jongraybill/Desktop/programming/seo-blog/frontend/components/auth/ProfileUpdate.js"],"names":["Link","useState","useEffect","Router","getCookie","isAuth","getProfile","update","ProfileUpdate","values","setValues","username","name","email","about","password","error","success","loading","photo","userData","token","init","then","data","handleChange","e","value","target","files","userFormData","FormData","set","handleSubmit","preventDefault","profileUpdateForm"],"mappings":"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":["import Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { getProfile, update } from '../../actions/user';\n\nconst ProfileUpdate = () => {\n    const [values, setValues] = useState({\n        username: '',\n        name: '',\n        email: '',\n        about: '',\n        password: '',\n        error: false,\n        success: false,\n        loading: false,\n        photo: '',\n        userData: ''\n    });\n\n    const token = getCookie('token');\n    const { username, name, email, about, password, error, success, loading, photo, userData } = values;\n\n    const init = () => {\n        getProfile(token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    username: data.username,\n                    name: data.name,\n                    email: data.email,\n                    about: data.about\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    const handleChange = name => e => {\n        // console.log(e.target.value);\n        const value = name === 'photo' ? e.target.files[0] : e.target.value;\n        let userFormData = new FormData();\n        userFormData.set(name, value);\n        setValues({ ...values, [name]: value, userData: userFormData, error: false, success: false });\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        setValues({ ...values, loading: true });\n        update(token, userData).then(data => {\n            if (data.error) {\n                setValues({ ...value, error: data.error, success: false, loading: false });\n            } else {\n                setValues({\n                    ...values,\n                    username: data.username,\n                    name: data.name,\n                    email: data.email,\n                    about: data.about,\n                    password: '',\n                    success: true,\n                    loading: false\n                });\n            }\n        });\n    };\n\n    const profileUpdateForm = () => (\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <label className=\"btn btn-outline-info\">\n                    Profile photo\n                    <input onChange={handleChange('photo')} type=\"file\" accept=\"image/*\" hidden />\n                </label>\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Username</label>\n                <input onChange={handleChange('username')} type=\"text\" value={username} className=\"form-control\" />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" value={name} className=\"form-control\" />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input onChange={handleChange('email')} type=\"text\" value={email} className=\"form-control\" />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">About</label>\n                <textarea onChange={handleChange('about')} type=\"text\" value={about} className=\"form-control\" />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input onChange={handleChange('password')} type=\"text\" value={password} className=\"form-control\" />\n            </div>\n            <div>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                </button>\n            </div>\n        </form>\n    );\n\n    return (\n        <React.Fragment>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-4\">image</div>\n                    <div className=\"col-md-8 mb-5\">{profileUpdateForm()}</div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default ProfileUpdate;\n\n\n\n\n\n// import Link from 'next/link';\n// import { useState, useEffect } from 'react';\n// import Router from 'next/router';\n// import { getCookie, isAuth, updateUser } from '../../actions/auth';\n// import { getProfile, update } from '../../actions/user';\n// import { API } from '../../config';\n \n// const ProfileUpdate = () => {\n//     const [values, setValues] = useState({\n//         username: '',\n//         username_for_photo: '',\n//         name: '',\n//         email: '',\n//         about: '',\n//         password: '',\n//         error: false,\n//         success: false,\n//         loading: false,\n//         photo: '',\n//         userData: process.browser && new FormData()\n//     });\n \n//     const token = getCookie('token');\n//     const {\n//         username,\n//         username_for_photo,\n//         name,\n//         email,\n//         about,\n//         password,\n//         error,\n//         success,\n//         loading,\n//         photo,\n//         userData\n//     } = values;\n \n//     const init = () => {\n//         getProfile(token).then(data => {\n//             if (data.error) {\n//                 setValues({ ...values, error: data.error });\n//             } else {\n//                 setValues({\n//                     ...values,\n//                     username: data.username,\n//                     username_for_photo: data.username,\n//                     name: data.name,\n//                     email: data.email,\n//                     about: data.about\n//                 });\n//             }\n//         });\n//     };\n \n//     useEffect(() => {\n//         init();\n//         setValues({ ...values, userData: new FormData() });\n//     }, []);\n \n//     const handleChange = name => e => {\n//         // console.log(e.target.value);\n//         const value = name === 'photo' ? e.target.files[0] : e.target.value;\n//         // let userData = new FormData();\n//         userData.set(name, value);\n//         console.log(...userData); // SEE THE FORMDATA IN CONSOLE\n//         setValues({ ...values, [name]: value, userData, error: false, success: false });\n//     };\n \n//     const handleSubmit = e => {\n//         e.preventDefault();\n \n//         setValues({ ...values, loading: true });\n//         update(token, userData).then(data => {\n//             if (data.error) {\n//                 console.log('data.error', data.error);\n//                 setValues({ ...values, error: data.error, loading: false });\n//             } else {\n//                 updateUser(data, () => {\n//                     setValues({\n//                         ...values,\n//                         username: data.username,\n//                         name: data.name,\n//                         email: data.email,\n//                         about: data.about,\n//                         password: '',\n//                         success: true,\n//                         loading: false\n//                     });\n//                 });\n//             }\n//         });\n//     };\n \n//     const profileUpdateForm = () => (\n//         <form onSubmit={handleSubmit}>\n//             <div className=\"form-group\">\n//                 <label className=\"btn btn-outline-info\">\n//                     Profile photo\n//                     <input onChange={handleChange('photo')} type=\"file\" accept=\"image/*\" hidden />\n//                 </label>\n//             </div>\n//             <div className=\"form-group\">\n//                 <label className=\"text-muted\">Username</label>\n//                 <input onChange={handleChange('username')} type=\"text\" value={username} className=\"form-control\" />\n//             </div>\n//             <div className=\"form-group\">\n//                 <label className=\"text-muted\">Name</label>\n//                 <input onChange={handleChange('name')} type=\"text\" value={name} className=\"form-control\" />\n//             </div>\n//             {/*<div className=\"form-group\">\n//                 <label className=\"text-muted\">Email</label>\n//                 <input onChange={handleChange('email')} type=\"text\" value={email} className=\"form-control\" />\n//             </div>*/}\n//             <div className=\"form-group\">\n//                 <label className=\"text-muted\">About</label>\n//                 <textarea onChange={handleChange('about')} type=\"text\" value={about} className=\"form-control\" />\n//             </div>\n//             <div className=\"form-group\">\n//                 <label className=\"text-muted\">Password</label>\n//                 <input onChange={handleChange('password')} type=\"password\" value={password} className=\"form-control\" />\n//             </div>\n//             <div>\n//                 {showSuccess()}\n//                 {showError()}\n//                 {showLoading()}\n//             </div>\n//             <div>\n//                 <button type=\"submit\" className=\"btn btn-primary\" disabled={!username || !name || !email}>\n//                     Update\n//                 </button>\n//             </div>\n//         </form>\n//     );\n \n//     const showError = () => (\n//         <div className=\"alert alert-danger\" style={‌{display: error ? '' : 'none'}}>\n//             {error}\n//         </div>\n//     );\n \n//     const showSuccess = () => (\n//         <div className=\"alert alert-success\" style={‌{ display: success ? '' : 'none' }}>\n//             Profile updated\n//         </div>\n//     );\n \n//     const showLoading = () => (\n//         <div className=\"alert alert-info\" style={‌{ display: loading ? '' : 'none' }}>\n//             Loading...\n//         </div>\n//     );\n \n//     return (\n//         <React.Fragment>\n//             <div className=\"container\">\n//                 <div className=\"row\">\n//                     <div className=\"col-md-4\">\n//                         <img\n//                             src={`${API}/user/photo/${username_for_photo}`}\n//                             className=\"img img-fluid img-thumbnail mb-3\"\n//                             style={‌{ maxHeight: 'auto', maxWidth: '100%' }}\n//                             alt=\"user profile\"\n//                         />\n//                     </div>\n//                     <div className=\"col-md-8 mb-5\">{profileUpdateForm()}</div>\n//                 </div>\n//             </div>\n//         </React.Fragment>\n//     );\n// };\n \n// export default ProfileUpdate;"]},"metadata":{},"sourceType":"module"}